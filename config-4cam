#!/usr/bin/env python
# lunch config file for the custom project postures/NTA
# Copy this to ~/.lunch/config
# 
# All you need to do here is to call add_command() for each command you want to add 
# to the distributed process launcher. 
# lunch is a distributed process launcher for GNU/Linux. see postures/trunk/py/
# -------------------------------------------------------------------

import os
#execfile(os.path.join(os.path.dirname(__file__), "postures.py"))
execfile(os.path.join(os.getcwd(), "postures.py"))

_hosts = ["posture01", "posture02", "posture03", "streamer01", "streamer03"]
_clients = ["posture01", "posture03"]

Debug = True


# camera -> receiver relationships:
_camPrefix = "81443610264"
_milhouses = [ {"sender":"streamer01", "camera":"df44", "receiver":"posture03" },
               {"sender":"streamer01", "camera":"df9f", "receiver":"posture03" },
               {"sender":"streamer01", "camera":"e606", "receiver":"posture03" },
               {"sender":"streamer01", "camera":"df4e", "receiver":"posture03" },
               {"sender":"streamer03", "camera":"e5e3", "receiver":"posture01" },
               {"sender":"streamer03", "camera":"df80", "receiver":"posture01" },
               {"sender":"streamer03", "camera":"e117", "receiver":"posture01" },
               {"sender":"streamer03", "camera":"dca3", "receiver":"posture01" },
               {"sender":"posture01", "audio":True, "receiver":"posture03" },
               {"sender":"posture03", "audio":True, "receiver":"posture01" },
             ]
_milhouses = []

# clear log files:
for h in _hosts:
    add_command("rm /var/tmp/lunch.log", user=postures.user, host=h)
    add_command("killall milhouse", user=postures.user, host=h, priority=1)

# server:
add_command("spinServer", title="spinServer (local)", sleep=1.0, priority=2) 

# ntaClients:
for c in _clients:
    if Debug:    
        add_command(postures.ntaClientDebug, env={"DISPLAY":":0.0"}, user=postures.user, host=c, title="ntaClient")
    else:
        add_command(postures.ntaClient, env={"DISPLAY":":0.0"}, user=postures.user, host=c, title="ntaClient")

# viewers:
add_command("spinViewer", env={"DISPLAY":":0.0"}, user=postures.user, host="posture03", title="spinViewer")
add_command("panoViewer", env={"DISPLAY":":0.0"}, user=postures.user, host="posture01", title="panoViewer")


# milhouse invocations:
_port = 10000
for m in _milhouses:

    sendOpt = "-s --address %s" % (m['receiver'])
    recvOpt = "-r --address %s" % (m['sender'])

    _title = "milhouse"
 
    if ("camera" in m):

        sendOpt += " --videoport %d" % (_port)
        #sendOpt += " --camera-number %d" % (m['camera'])
        sendOpt += " --camera-guid %s" % (_camPrefix + m['camera'])
        sendOpt += " --videocodec h263 --videosource dc1394src"
        #sendOpt += " --videobitrate 750000 --framerate 15"
        sendOpt += " --framerate 15"
        
        recvOpt += " --videoport %d" % (_port)
        #recvOpt += " --videocodec h263 --videosink xvimagesink"
        recvOpt += " --videocodec h263 --videosink sharedvideosink"
        #recvOpt += " --shared-video-id %s_%s" % (m['sender'], m['camera'])
        recvOpt += " --shared-video-id %s" % (m['camera'])

        _title += "_VID\(%s\)" % (m['camera'])

    if ("audio" in m):
        add_command("jack.plumbing", user=postures.user, host=m['sender'], title="jack.plumbing")
        add_command("jack.plumbing", user=postures.user, host=m['receiver'], title="jack.plumbing")

        sendOpt += " --audioport %d --audiocodec raw --audiosource jackaudiosrc --disable-jack-autoconnect --jack-client-name %s" % (_port+10, m['sender'])
        recvOpt += " --audioport %d --audiocodec raw --audiosink jackaudiosink --disable-jack-autoconnect --jack-client-name %s" % (_port+10, m['sender'])

        _title += "_AUD"

    add_command("milhouse %s"%(sendOpt), user=postures.user, host=m['sender'], title="%s_%s:TO:%s" % (_title, m['sender'], m['receiver']))
    add_command("milhouse %s"%(recvOpt), env={"DISPLAY":":0.0"}, user=postures.user, host=m['receiver'], title="%s_%s:FROM:%s" % (_title, m['receiver'], m['sender']))
    _port += 20

# local editor
if Debug:
    add_command(postures.spinEditorDebug, env={"DISPLAY":":0.0"}, title="spinEditor (local)")
else:
    add_command(postures.spinEditor, env={"DISPLAY":":0.0"}, title="spinEditor (local)")
